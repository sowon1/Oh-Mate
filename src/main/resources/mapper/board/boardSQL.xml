<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="board">
	
	<!-- 프로필 작성 -->
	<insert id="insertProfile" parameterType="p">
		insert into profile values(p_seq.nextval,#{pWriter},#{pGender},#{pAge},#{pLocal},#{pSmoke},#{pPet},#{pCleaning},#{pPattern})
	</insert>
	
	<!-- 프로필 조회 -->
	<select id="selectProfile" parameterType="String" resultType="p">
		select 
			p_no as pNo,
			p_writer as pWriter,
			p_gender as pGender,
			p_age as pAge,
			p_local as pLocal,
			p_smoke as pSmoke,
			p_pet as pPet,
			p_cleaning as pCleaning,
			p_pattern as pPattern
		from profile where P_writer=#{memberId}
	</select>
	
	<!-- 프로필 수정 -->
	<update id="updateProfile" parameterType="p">
		update profile set 
			p_writer=#{pWriter},
			p_gender=#{pGender},
			p_age=#{pAge},
			p_local=#{pLocal},
			p_smoke=#{pSmoke},
			p_pet=#{pPet},
			p_cleaning=#{pCleaning},
			p_pattern=#{pPattern}
		where p_writer=#{pWriter}
	</update>
	
	<!-- 프로필 삭제 -->
	<delete id="deleteProfile" parameterType="String">
		delete from profile where p_writer=#{pWriter}
	</delete>
	
		<!-- 회원조회  -->
	<select id="selectOneMember" parameterType="int" resultType="m">
		select 
			member_no as memberNo,
			member_id as memberId,
			member_pw as memberPw,
			member_name as memberName,
			phone,
			email,
			enroll_date as enrollDate,
			member_filepath as filepath,
			member_level as memberLevel,
			gender,
			age,
			profile_status as profileStatus	
 		from member where member_no=#{memberNo}
	</select>
	
	<!-- 회원조회  -->
	<select id="selectMember" parameterType="String" resultType="m">
		select 
			member_no as memberNo,
			member_id as memberId,
			member_pw as memberPw,
			member_name as memberName,
			phone,
			email,
			enroll_date as enrollDate,
			member_filepath as filepath,
			member_level as memberLevel,
			gender,
			age,
			profile_status as profileStatus	
 		from member where member_Id=#{memberId}
	</select>
	
	<!-- 게시글 목록 조회 -->
	<select id="bdList" resultType="b">
		select * from(
	    	select  ROWNUM as rnum,
	            BOARD_NO as boardNo,
				BOARD_WRITER as boardWriter,
				BOARD_TITLE as boardTitle,
				BOARD_CONTENT as boardContent,
				READ_COUNT as readCount,
				REG_DATE as regDate,
				FILEPATH,
				PROFILE_OPTION as profileOption,
				STATUS,
				(select member_filepath from member where member_id=board_writer)as fileImg
			from board order by BOARDNO desc)
        where rnum between 1 and 8
	</select>
	
	<!-- 게시글 목록 -->
	<select id="boardList" parameterType="int" resultType="b">
		select 
			BOARD_NO as boardNo,
			BOARD_WRITER as boardWriter,
			BOARD_TITLE as boardTitle,
			BOARD_CONTENT as boardContent,
			READ_COUNT as readCount,
			REG_DATE as regDate,
			FILEPATH,
			PROFILE_OPTION as profileOption,
			STATUS
		from board where board_no=#{boardNo}			
	</select>
	
	<!-- 게시글 작성 -->
	<insert id="insertBoard" parameterType="b">
		insert into board values(board_seq.nextval,#{boardWriter},#{boardTitle},#{boardContent},
		0,to_char(sysdate,'yyyy-mm-dd hh24:mi'),#{filePath},(select p_gender||p_age||p_local||p_smoke||p_pet||p_cleaning||p_pattern from profile where p_writer=#{boardWriter}),1)
	</insert>
	
	<!-- 게시글 조회수 -->
	<update id="updateCount">
		update board set
			read_count = read_count+1
		where board_no=#{boardNo}
	</update>

	<!-- 게시글 목록 -->
	<select id="selectBoardList" parameterType="int" resultType="b">
		select * from board where board_no=#{boardNo}		
	</select>

	<!-- 게시물 수정 -->
	<update id="boardUpdate" parameterType="b">
		update board set
			filepath=#{filePath},
			board_title=#{boardTitle},
			board_content=#{boardContent}
		where board_no=#{boardNo}
	</update>
	
	<!-- 게시물 삭제 -->
	<delete id="boardDelete" parameterType="b">
		delete from board where board_no=#{boardNo}
	</delete>

	<!-- 댓글 -->
	<insert id="insertComment" parameterType="mc">												 
		insert into mate_comment values
		<choose>
		<when test="boardRef == 0">
		(comment_seq.nextval,#{commentLevel},#{commentWriter},#{commentContent},to_char(sysdate,'yyyy-mm-dd hh24:mi'),
		#{boardNo},null,1,#{commentSecret})
		</when>
		<otherwise>
		(comment_seq.nextval,#{commentLevel},#{commentWriter},#{commentContent},to_char(sysdate,'yyyy-mm-dd hh24:mi'),
		#{boardNo},#{boardRef},1,#{commentSecret})
		</otherwise>
		</choose>
	</insert>

	<!-- 댓글조회 -->
	<select id="selectComment" parameterType="int" resultType="mc">
		select
			COMMENT_NO as commentNo,
			COMMENT_LEVEL as commentLevel,
			COMMENT_WRITER as commentWriter,
			COMMENT_CONTENT as commentContent,
			REG_DATE as regDate,
			BOARD_NO as boardNo,
			BOARDREF,
			STATUS,
			COMMENT_SECRET as commentSecret
		from Mate_comment where board_no=#{boardNo} order by regdate desc
	</select>
	
	<!-- 회원 파일경로 / 수정예정 -->
	<select id="selectcommentMember" parameterType="int" resultType="string">
		select 
    		comment_no,
    		comment_content,
    		comment_writer,
    		member_filepath
		from mate_comment left join member on (comment_writer = member_id) where board_no=#{boardNo}
	</select>
	
	<!-- 댓글 수정 -->
	<update id="updateComment" parameterType="map">
		update mate_comment set comment_content=#{commentContent} where comment_no=#{commentNo}
	</update>
	
	<!-- 댓글 삭제 -->
	<delete id="delteComment" parameterType="int">
		delete from mate_comment where comment_no=#{commentNo}
	</delete>
	
	<!-- 게시판_프로필옵션 -->
	<select id="selectBoardPr" parameterType="int" resultType="string">
		select profile_option from board where board_no=#{boardNo}
	</select>
	
	<!-- 마이페이지_커뮤니티 게시글/댓글 -->
	<select id="communityConfirm" parameterType="map" resultType="b">
	 select 
	 		board_no as boardNo,
			board_title as boardTitle, 
			board_writer as boardWriter,
			reg_date as regDate, 
			read_count as readCount,
            status
		from (select rownum as rnum,b.* from (select * from board where board_writer=#{memberId} order by reg_date desc)b)
		where rnum between #{start} and #{end}
	</select>
	
	<!-- 마이페이지_전체 게시물 수 -->
	<select id="totalCount" parameterType="string" resultType="int">
		select count(*)as count from board where board_writer=#{memberId}
	</select>

	<!-- 마이페이지_커뮤니티 게시글/댓글 -->
	<select id="commentConfirm" parameterType="map" resultType="mc">
	    select 
			comment_no as commentNo, 
			comment_level as commentLevel,
			comment_writer as commentWriter,
			comment_content as commentContent, 
			reg_date as regDate,
            status
		from (select rownum as rnum,b.* from (select * from mate_comment where comment_writer=#{memberId} order by reg_date desc)b)
		where rnum between #{start} and #{end}
	</select>
	
	<!-- 마이페이지_전체 게시물 수 -->
	<select id="totalCountcm" parameterType="string" resultType="int">
		select count(*) from mate_comment where comment_writer=#{memberId}
	</select>
	
	<!-- 조건검색 -->
	<select id="mateSearch" parameterType="String" resultType="b">
			select 
			BOARD_NO as boardNo,
			BOARD_WRITER as boardWriter,
			BOARD_TITLE as boardTitle,
			BOARD_CONTENT as boardContent,
			READ_COUNT as readCount,
			REG_DATE as regDate,
			FILEPATH,
			PROFILE_OPTION as profileOption,
			STATUS,
			(select member_filepath from member where member_id=board_writer)as fileImg
        from board where (board_title like '%' ||  #{keyword} || '%' or board_content like '%' ||  #{keyword} || '%') order by regDate desc
	</select>

	<!-- 더보기 -->
	<select id="communityMore" parameterType="map" resultType="b">
		 select * from(
	    	select  ROWNUM as rnum,
	            BOARD_NO as boardNo,
				BOARD_WRITER as boardWriter,
				BOARD_TITLE as boardTitle,
				BOARD_CONTENT as boardContent,
				READ_COUNT as readCount,
				REG_DATE as regDate,
				FILEPATH,
				PROFILE_OPTION as profileOption,
				STATUS,
				(select member_filepath from member where member_id=board_writer)as fileImg
			from board order by BOARDNO desc)
        where rnum between #{start} and #{end}
	</select>
	
	<!-- 총 게시물수(더보기) -->
	<select id="BoardtotalCount" resultType="int">
		select count(*) from board
	</select>
	
	<select id="searchOption" parameterType="p" resultType="b">
		select BOARD_NO as boardNo,
			BOARD_WRITER as boardWriter,
			BOARD_TITLE as boardTitle,
			BOARD_CONTENT as boardContent,
			READ_COUNT as readCount,
			REG_DATE as regDate,
			FILEPATH,
			PROFILE_OPTION as profileOption,
			STATUS,
			(select member_filepath from member where member_id=board_writer)as fileImg
        from board where profile_option in (select p_gender||p_age||p_local||p_smoke||p_pet||p_cleaning||p_pattern from profile)
	</select>
</mapper>




