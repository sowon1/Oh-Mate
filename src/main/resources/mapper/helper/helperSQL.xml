<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="helper">
 	<insert id="insertHelperReqNoImg" parameterType="hp">
 		insert into helper values(helper_seq.nextval,#{memberNo},#{helperName},#{helperCategory},#{helperStartTime},#{helperEndTime},#{helperRide},1,'noImg.png',#{helperIntro},#{helperCredit},#{helperRefuse})
 		<selectKey resultType="_int" order="AFTER" keyProperty="helperNo">
 			select max(helper_no) from helper
 		</selectKey>
 	</insert>
 	<insert id="insertAddress" parameterType="addr">
 		insert into address values(address_seq.nextval,#{addressNumber},#{addressCode},#{addressName},#{addressRoad},#{addressLegal},2,'헬퍼번호')
 	</insert>
 	<insert id="insertHelperAndImg" parameterType="hp">
 		
 		insert into helper values(helper_seq.nextval,#{memberNo},#{helperName},#{helperCategory},#{helperStartTime},#{helperEndTime},#{helperRide},1,#{helperFilepath},#{helperIntro},#{helperCredit},null)
 		<selectKey resultType="_int" order="AFTER" keyProperty="helperNo">
 			select max(helper_no) from helper
 		</selectKey>
 	</insert>
 	<!-- 헬퍼 닉네임 중복확인 -->
 	<select id="selectOneHelper" parameterType="string" resultType="hp">
 		select
 			helper_no as helperNo,
 			member_no as memberNo,
 			helper_name as helperName,
 			helper_category as helperCategory,
 			helper_start_time as helperStartTime,
 			helper_end_time as helperEndTime,
 			helper_ride as helperRide,
 			helper_status as helperStatus,
 			helper_filepath as helperFilepath,
 			helper_intro as helperIntro,
 			helper_credit as helperCredit,
 			helper_refuse as helperRefuse
 		from helper where helper_name=#{helperName} and helper_status = 2
 	</select>
 	<!-- 헬퍼 중복 등록 방지 -->
 	<select id="selectOneHelperMemberNo" parameterType="_int" resultType="hp">
 		select
 			helper_no as helperNo,
 			member_no as memberNo,
 			helper_name as helperName,
 			helper_category as helperCategory,
 			helper_start_time as helperStartTime,
 			helper_end_time as helperEndTime,
 			helper_ride as helperRide,
 			helper_status as helperStatus,
 			helper_filepath as helperFilepath,
 			helper_intro as helperIntro,
 			helper_credit as helperCredit,
 			helper_refuse as helperRefuse
 		from helper where member_no=#{memberNo}
 	</select>
 	<!-- 헬퍼 등록시 계좌등록 -->
 	<insert id="insertIncomeHelper">
 		insert into income values(
 			income_seq.nextval,#{incomeBank},#{incomeAccount},#{incomeName},1,#{incomeNum}
 		)
 	</insert>
 	<select id="selectOneIncome" parameterType="_int" resultType="i">
 		select
			income_no as incomeNo,
			income_bank as incomeBank,
			income_account as incomeAccount,
			income_name as incomeName,
			income_category as incomeCategory
		from income where income_num=#{houseNo} and income_category=1
 	</select>
 	<!-- 미승인 및 승인대기시 재요청 사진x &&  사진O -->
 	<update id="updateHelperReqNoImg" parameterType="hp">
 		update helper set 
 			helper_name = #{helperName},
 			helper_category = #{helperCategory},
 			helper_start_time = #{helperStartTime},
 			helper_end_time = #{helperEndTime},
 			helper_ride = #{helperRide},
 			helper_status = #{helperStatus},
 			helper_intro = #{helperIntro},
 			helper_credit = #{helperCredit}
 		where helper_no = #{helperNo} and member_no=#{memberNo}
 	</update>
 	<delete id="deleteAddressUpdate" parameterType="_int">
 		delete from address
 		where address_number = #{addressNumber} and address_category=2
 	</delete>
 	<update id="insertIncomeHelperUpdate" parameterType="i">
 		update income set
 			income_bank = #{incomeBank},
 			income_account = #{incomeAccount},
 			income_name = #{incomeName}
 		where income_no=#{incomeNo} and income_category=1 and income_num=#{incomeNum}
 	</update>
 	<update id="updateHelperReqImg" parameterType="hp">
 		update helper set 
 			helper_name = #{helperName},
 			helper_category = #{helperCategory},
 			helper_start_time = #{helperStartTime},
 			helper_end_time = #{helperEndTime},
 			helper_ride = #{helperRide},
 			helper_status = 4,
 			helper_filepath = #{helperFilepath},
 			helper_intro = #{helperIntro},
 			helper_credit = #{helperCredit}
 		where helper_no = #{helperNo} and member_no=#{memberNo}
 	</update>
 	
 	<!-- 헬퍼 리스트 출력 부분 - sowon 
 		주소 2개의 행이라서 그부분 처리 어떻게 ?
 	-->
 	<select id="selectAjaxHelper" parameterType="map" resultMap="helper">
 		select hh.* from
        (select 
            rownum as rnum,
            h.*,
            (select age from member where member_no=h.member_no) as age,
            (select gender from member where member_no=h.member_no) as gender,
             decode((select count(*) from bookmark where bookmarker=#{memberNo} and BOOKMARK_CATEGORY=1 and BOOKMARK_NUM=h.helper_no),'1','좋아요','좋아요취소') as likedCheck            
        from 
        (select helper.*
        from helper 
        join member on (helper.member_no = member.member_no)
        where 
            helper_status=1
            <if test="gender != 0 and gender != 3 and gender != null and !''.equals(gender)">
				and gender=#{gender}
			</if>
			<if test="age != 0 and age != 3 and age != null and !''.equals(age)">
				and age=#{age}
			</if>
            <if test="keyword != null and !''.equals(keyword)">
            	and (helper_intro || address_name || address_road || address_legal) like '%' ||  #{keyword} || '%'     
			</if>
			<if test="!'00:00'.equals(helperStartTime) and helperStartTime != null and !''.equals(helperStartTime)">
				and helper_start_time=#{helperStartTime}
			</if>
			<if test="!'00:00'.equals(helperEndTime) and helperEndTime != null and !''.equals(helperEndTime)">
				and helper_end_time=#{helperEndTime}
			</if>
			<if test="!'00000000'.equals(helperCategory) and helperCategory != null and !''.equals(helperCategory)">
				and helper_category = #{helperCategory}
			</if>
        order by 1 desc
        )h)hh where rnum between #{start} and #{end}
 	</select>
	<!-- 주소 -->
	<select id="selectAddressHelperList" parameterType="_int" resultType="addr">
		select
			address_no as addressNo,
			address_number as addressNumber,
			address_code as addressCode,
			address_name as addressName,
			address_road as addressRoad,
			address_legal as addressLegal,
			address_category as addressCategory,
			address_detail as addressDetail
		from
			(select rownum as rnum, h.* from
			(select * from address where address_category=2 and address_number =#{helperNo} order by 1 )h) 
		where rnum = 1
	</select>
	<resultMap type="hp" id="helper">
		<result column="helper_no" property="helperNo"/>
		<result column="member_no" property="memberNo"/>
		<result column="helper_name" property="helperName"/>
		<result column="helper_category" property="helperCategory"/>
		<result column="helper_start_time" property="helperStartTime"/>
		<result column="helper_end_time" property="helperEndTime"/>
		<result column="helper_ride" property="helperRide"/>
		<result column="helper_status" property="helperStatus"/>
		<result column="helper_filepath" property="helperFilepath"/>
		<result column="helper_intro" property="helperIntro"/>
		<result column="helper_credit" property="helperCredit"/>
		<result column="helper_refuse" property="helperRefuse"/>
		<collection property="addr"
					column="helper_no"
					javaType="java.util.ArrayList"
					ofType="addr"
					select="selectAddressHelperList"	
		/>
	</resultMap>
	<!-- 헬퍼  좋아요 부분 -->
	<select id="helperLike" parameterType="map" resultType="_int">
		select 
			 count(*)
		from bookmark
		where bookmark_category=1 and bookmarker=#{memberNo} and bookmark_num=#{helperNo}
	</select>
	<!-- helper like total -->
	<select id="helperLikeCount" parameterType="_int" resultType="_int">
		select count(*)
		from bookmark
		where bookmark_category=1 and bookmark_num=#{helperNo}
	</select>
	<!-- helper like insert -->
	<insert id="insertHelperLike" parameterType="map">
		insert into bookmark 
  		values(bookmark_seq.nextval,#{memberNo},#{helperNo},1,to_char(sysdate,'yyyy-mm-dd'))
	</insert>
	<!-- helper like delete -->
	<delete id="deleteHelperLike" parameterType="map">
		delete from bookmark where bookmark_category=1 and bookmarker=#{memberNo} and bookmark_num=#{helperNo}
	</delete>
	<!-- 헬퍼 상세보기 -->
	<select id="selectHelperView" parameterType="map" resultType="hp">
		select
			h.helper_no as helperNo,
			h.member_no as memberNo,
			h.helper_name as helperName,
			h.helper_category as helperCategory,
			h.helper_start_time as helperStartTime,
			h.helper_end_time as helperEndTime,
			h.helper_ride as helperRide,
			h.helper_status as helperStatus,
			h.helper_filepath as helperFilepath,
			h.helper_intro as helperIntro,
			h.helper_credit as helperCredit,
			h.helper_refuse as helperRefuse,
			(select age from member where member_no=h.member_no) as age,
            (select gender from member where member_no=h.member_no) as gender,
			(select count(*) from bookmark where BOOKMARK_CATEGORY=1 and bookmark_num=h.helper_no) as likeCount,
			(select count(*) from helplist where helper_no=h.helper_no and help_status=3) as helpStatus3,
			(select count(*) from helplist where helper_no=h.helper_no and help_status=4) as helpStatus4,			
			(select	regexp_replace(listagg(address_name, ',') within group(order by address_name), '([^,]+)(,\1)+', '\1')
			        from address where address_category = 2 and address_number = h.helper_no) addressName,
			decode((select count(*) from bookmark where bookmarker=#{memberNo} and BOOKMARK_CATEGORY=1 and BOOKMARK_NUM=#{helperNo}),'1','좋아요','좋아요취소') as likedCheck
		from helper h where helper_no=#{helperNo}
	</select>
	<!-- 헬퍼 후기 -->
	<select id="selectHelperReview" parameterType="map" resultType="re">
		select
			review_no as reviewNo,
			member_no as memberNo,
			helper_no as helperNo,
			review_title as reviewTitle,
			review_content as reviewContent,
			asterion,
			review_date as reviewDate,
			(select count(*) from bookmark where BOOKMARK_CATEGORY=3 and bookmark_num=review_no) as likeCount,
			decode((select count(*) from bookmark where bookmarker=#{memberNo} and BOOKMARK_CATEGORY=3 and BOOKMARK_NUM=review_no),'1','좋아요','좋아요취소') as likedCheck
		from help_review where helper_no =#{helperNo}
	</select>
	<select id="selectHelperNo" parameterType="_int" resultType="_int">
		select
			helper_no as helperNo
		from helper where member_no=#{memberNo}
	</select>
	<!-- helpList insert -->
	<insert id="insertHelprequest" parameterType="map">
		insert into helplist
		values (help_seq.nextval,#{memberNo},#{helperNo},#{h.helpTitle},#{h.helpContent},#{h.helpCategory},#{h.helpCharge},1,#{h.helpStartTime},#{h.helpEndTime},to_char(sysdate,'yyyy-mm-dd'),null,null)
	</insert>
	<!-- helpList address insert -->
	<insert id="insertAddressHelp" parameterType="map">
		insert into address 
		values(address_seq.nextval,#{helpNo},#{addr.addressCode},#{addr.addressName},#{addr.addressRoad},#{addr.addressLegal},3,#{addr.addressDetail})
	</insert>
	<!-- helpNo select -->
	<select id="selectHelperNo2" resultType="_int">
		select
			max(help_no)
		from helplist
	</select>
	<select id="selectBookmarkHelperList" parameterType="_int" resultType="hp">
        select * from
        	(select 
            	b.bookmark_date as bookmarkDate,           
            	h.helper_no as helperNo,
				h.member_no as memberNo,
				h.helper_name as helperName,
				h.helper_category as helperCategory,
				h.helper_start_time as helperStartTime,
				h.helper_end_time as helperEndTime,
				h.helper_ride as helperRide,
				h.helper_status as helperStatus,
				h.helper_filepath as helperFilepath,
				h.helper_intro as helperIntro,
				h.helper_credit as helperCredit,
				h.helper_refuse as helperRefuse,
            	(select age from member where member_no=h.member_no) as age,
            	(select gender from member where member_no=h.member_no) as gender         
        	from (select * from helper where HELPER_STATUS=1 order by 1 desc)h
        	join  bookmark b on(bookmark_num=helper_no)
        	where b.bookmark_category=1 and b.bookmarker=#{memberNo}) 
	</select>

</mapper>
