<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="house">
	<!-- 하우스등록 -->
  <insert id="insertHouse" parameterType="h">
  insert into house
  values(house_seq.nextval,#{memberNo},#{houseTitle},#{houseownerDeadline},2,null,#{houseContent},#{houseRoom},#{houseCharge},
  #{houseRule},#{houseForm},#{houseGender},#{houseConvenience},1)
  	<selectKey resultType="_int" order="AFTER" keyProperty="houseNo">
  	<!-- 하우스 번호 넘기기위한 selectkey 발동 -->
  		select max(house_no) from house
  	</selectKey>
  </insert>
  <!-- 하우스 등록할때 주소등록 -->
  <insert id="insertAddress" parameterType="addr">
  	insert into address 
  	values(address_seq.nextval,#{addressNumber},#{addressCode},#{addressName},#{addressRoad},#{addressLegal},1,#{addressDetail})
  </insert>
  <!-- 하우스 등록할때 계좌등록 -->
  <insert id="insertIncome" parameterType="i">
  	insert into income
  	values(income_seq.nextval,#{incomeBank},#{incomeAccount},#{incomeName},2,#{incomeNum})
  </insert>
  <insert id="insertImgFile" parameterType="f">
  <!-- 하우스 다중사진 처리 -->
  	insert into photo
  	values(photo_seq.nextval,1,#{photoPath},#{photoNum})
  </insert>
  <!-- 하우스 리스트 출력 - sowon 
  <select id="selectSearchHouse" parameterType="search">
  		select * from house 
  				<trim prefix="where" prefixOverrides="and|or">
  					<if test="!gender.equals('')">
  						house_gender=#{gender}
  					</if>
  					<if test="!housetype.equals('')">
  						house_Form=#{housetype}
  					</if>
  				</trim>
  	-->
  <!-- 하우스 리스트 출력 - sowon   -->
  <select id="selectAllHouse" parameterType="h" resultMap="house">
  		select 
			*
		from  
			(select rownum as rnum, h.* from
			(select * from house where house_allow=1 order by 1 desc)h) 
		where rnum between 1 and 10
  				<!--  
			    where house_gender=#{gender}
			    and house_Form=#{housetype}
			    and ((house_title || house_content || HOUSE_FORM) like=%#{keyword}%)    
			    or house_no = (select address_number from address where ADDRESS_CATEGORY='1' and (address_name || address_road || address_legal) like=%#{keyword}%);
			   <if test="">			   
			    	and house_no in (select house_no from room where ROOM_PERSONNEL=#{room} and ROOM_CHARGE between #{roomCharge1} and #{roomCharge2})
			   </if>
			   -->
  </select>
	<!-- 하우스 사진 조회 테이블 -->
	<select id="selectFileList" resultType="f">
		select
			photo_no as photoNo,
			photo_category as photoCategory, 
			photo_path as photoPath, 
			photo_num as photoNum 
		from 
			(select rownum as rnum, h.* from
			(select * from photo where photo_category=1 and photo_num = #{houseNo} order by 1 )h) 
		where rnum = 1
	</select>
	<!-- 하우스 사진 연결 메소드를 하나 만들어두고 사용하는거라고 생각하면됨 id가 메소드명-->
	<resultMap type="h" id="house">
		<result column="house_no" property="houseNo"/>
		<result column="member_no" property="memberNo"/>
		<result column="house_title" property="houseTitle"/>
		<result column="houseowner_deadline" property="houseownerDeadline"/>
		<result column="house_selling" property="houseSelling"/>
		<result column="refuse_reason" property="refuseReason"/>
		<result column="house_content" property="houseContent"/>
		<result column="house_room" property="houseRoom"/>
		<result column="house_charge" property="houseCharge"/>
		<result column="house_rule" property="houseRule"/>
		<result column="house_form" property="houseForm"/>
		<result column="house_gender" property="houseGender"/>
		<result column="house_convenience" property="houseConvenience"/>
		<result column="house_allow" property="houseAllow"/>
		<collection property="photoList"
					column="house_no"
					javaType="java.util.ArrayList"
					ofType="f"
					select="selectFileList"	
		/>
	</resultMap>
	<select id="selectAjaxHouse" parameterType="map" resultMap="house">
	 	select 
			*
		from  
			(select rownum as rnum, h.* from
			(select * from house where house_allow=1 order by 1 desc)h) 
		where rnum between #{start} and #{end}
	</select>
	<!-- total -->
	<select id="houseTotal" resultType="_int">
	 	select count(*) from house
	</select>
</mapper>
