<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="room">
	<!-- 룸 리스트  -->
 	<select id="selectAllRoom" parameterType="_int" resultType="r">
 		select
 			room_no as roomNo,
 			house_no as houseNo,
 			room_title as roomTitle,
 			room_size as roomSize,
 			room_phone as roomPhone,
 			room_status as roomStatus,
 			room_charge as roomCharge,
 			room_content as roomContent,
 			room_personnel as roomPersonnel,
 			room_month as roomMonth
 		from room where house_no=#{houseNo}
 	</select>
 	<!-- 룸 등록 -->
 	<insert id="insertRoom" parameterType="r">
 		insert into room
 		values(room_seq.nextval,#{houseNo},#{roomTitle},#{roomSize},#{roomPhone},1,#{roomCharge},#{roomContent},#{roomPersonnel},#{roomMonth})
 	</insert>
 	<!-- 룸 삭제  -->
 	<delete id="deleteRoom" parameterType="r">
 		delete from room where room_no=#{roomNo} and house_no=#{houseNo}
 	</delete>
 	<select id="selectOneRoom" parameterType="map" resultType="r">
 		select
 			room_no as roomNo,
 			house_no as houseNo,
 			room_title as roomTitle,
 			room_size as roomSize,
 			room_phone as roomPhone,
 			room_status as roomStatus,
 			room_charge as roomCharge,
 			room_content as roomContent,
 			room_personnel as roomPersonnel,
 			room_month as roomMonth
 		from room where house_no=#{houseNo} and room_no=#{roomNo}
 	</select>
 	<update id="updateRoom" parameterType="r">
 		update room set 
 		room_title = #{roomTitle},
 		room_size = #{roomSize},
 		room_phone = #{roomPhone},
 		room_charge = #{roomCharge},
 		room_content = #{roomContent},
 		room_personnel = #{roomPersonnel},
 		room_month = #{roomMonth}
 		where room_no=#{roomNo} and house_no=#{houseNo}
 	</update>
 	<select id="selectHouseOwnerList" parameterType="_int" resultType="h">
 	select
 		house_no as houseNo,
 		member_no as memberNo,
 		house_title as houseTitle,
 		houseowner_deadline as houseownerDeadline,
 		house_selling as houseSelling,
 		refuse_reason as refuseReason,
 		house_content as houseContent,
 		house_room as houseRoom,
 		house_charge as houseCharge,
 		house_rule as houseRule,
 		house_form as houseForm,
 		house_gender as houseGender,
 		house_convenience as houseConvenience
 		house_allow as houseAllow
 	from house where member_no = #{memberNo}
 	</select>
 	<!-- 입주신청 sowon -->
 	<insert id="insertMove" parameterType="map">
 	insert into move
  	values(
  		move_seq.nextval,
  		#{roomNo},
  		#{memberNo},
  		#{m.moveStart},
  		#{m.moveEnd},
  		#{m.movePhone}
  	)
 	</insert>
 	<!-- room 상태변경  -->
 	<update id="updateHouseRoom" parameterType="map">
 		update room set room_status=2 where room_no=#{roomNo} and house_no=#{houseNo}
 	</update>
 	<!-- 결제정보 등록 -->
 	<insert id="insertMovePay" parameterType="map">
 		insert into pay
	  	values(
	  		pay_seq.nextval,
	  		2,
	  		#{moveNo},
	  		#{p.payId},
	  		#{p.payName},
	  		#{p.payNum},
	  		#{p.payPrice},
	  		to_char(sysdate,'YYYY-MM-DD HH24:MI:SS'),
	  		#{p.payWay},
	  		'정산대기',
	  		null
	  	)	
 	</insert>
 	<!-- 입주 등록시 하우스 내용가져오기 -->
 	<select id="houseOneSelect" parameterType="_int" resultType="h">
 		select
			house_no as houseNo,
			member_no as memberNo,
			house_title as houseTitle,
			houseowner_deadline as houseownerDeadline,
			house_selling as houseSelling,
			refuse_reason as refuseReason,
			house_content as houseContent,
			house_room as houseRoom,
			house_charge as houseCharge,
			house_rule as houseRule,
			house_form as houseForm,
			house_gender as houseGender,
			house_convenience as houseConvenience,
			house_allow as houseAllow
            from house
		 where house_no = #{houseNo}
 	</select>
 	<!-- 잔여방 갯수 -->
 	<select id="selectRoomCount" parameterType="_int" resultType="_int">
 		select count(*)from room where house_no=#{houseNo} and room_status=2
 	</select>
 	<!-- 입주신청시 방이 꽉차면 하우스 셀링 번호 2로.. -->
 	<update id="updateHouseSelling" parameterType="_int">
 		update house set 
 			house_selling=2
 		where house_no = #{houseNo}
 	</update>
	<!-- 투어신청 리스트 -->
 	<select id="selectTourRequest" parameterType="map" resultMap="tour">
 		select * from 
    		(select 
       			rownum as rnum, 
        		r.house_no,
        		t.*,
        		a.address_name,
        		a.address_road,
        		a.address_legal,
        		r.room_title,
        		r.room_status,
       			r.room_personnel
    		from room r 
        		join tour t on r.room_no = t.room_no
        		join address a on r.house_no = a.address_number
    		where t.member_no = #{memberNo} and a.address_category=1
    		order by 1 desc)
		where rnum between #{start} and #{end}
 	</select>
 	<!-- tour에 하우스 사진 -->
 	<select id="selectFileList" parameterType="_int" resultType="f">
		select
			photo_no as photoNo,
			photo_category as photoCategory, 
			photo_path as photoPath, 
			photo_num as photoNum 
		from 
			(select rownum as rnum, h.* from
			(select * from photo where photo_category=1 and photo_num = #{houseNo} order by 1 )h) 
		where rnum = 1
	</select>
	<resultMap type="t" id="tour">
		<result column="house_no" property="houseNo"/>
		<result column="tour_no" property="tourNo"/>
		<result column="room_no" property="roomNo"/>
		<result column="member_no" property="memberNo"/>
		<result column="tour_phone" property="tourPhone"/>
		<result column="tour_email" property="tourEmail"/>
		<result column="house_name" property="houseName"/>
		<result column="tour_qna" property="tourQna"/>
		<result column="tour_visit" property="tourVisit"/>
		<result column="tour_status" property="tourStatus"/>
		<result column="address_name" property="addressName"/>
		<result column="address_road" property="addressRoad"/>
		<result column="address_legal" property="addressLegal"/>
		<result column="room_title" property="roomTitle"/>
		<result column="room_status" property="roomStatus"/>
		<result column="room_personnel" property="roomPersonnel"/>
		<collection property="photoList"
					column="house_no"
					javaType="java.util.ArrayList"
					ofType="f"
					select="selectFileList"	
		/>
	</resultMap>
	<!-- tourRequestList count -->
 	<select id="tourRequestCount" parameterType="_int" resultType="_int">
 		select count(*) from tour where member_no = #{memberNo}
 	</select>
	<select id="selectOneRoomTM" parameterType="map" resultType="r">
		select
 			room_no as roomNo,
 			house_no as houseNo,
 			room_title as roomTitle,
 			room_size as roomSize,
 			room_phone as roomPhone,
 			room_status as roomStatus,
 			room_charge as roomCharge,
 			room_content as roomContent,
 			room_personnel as roomPersonnel,
 			room_month as roomMonth
 		from room where room_no=#{roomNo} and house_no =#{houseNo}
	</select>
	<select id="selectAllTourList" parameterType="map" resultType="t">
		select
 			tour_no as tourNo,
 			room_no as roomNo,
 			member_no as memberNo,
 			tour_phone as tourPhone,
 			tour_email as tourEmail,
 			house_name as houseName,
 			tour_qna as tourQna,
 			tour_visit as tourVisit,
 			tour_status as tourStatus
 		from (select rownum as rnum, t.* from (SELECT * FROM tour where room_no=#{roomNo} order by 1 desc)t) 
		where rnum between #{tourstart} and #{tourend}
	</select>
	<select id="selectAllMoveList" parameterType="map" resultType="move">
		select
			move_no as moveNo,
			room_no as roomNo,
			member_no as memberNo,
			move_start as moveStart,
			move_end as moveEnd,
			move_phone as movePhone
		from (select rownum as rnum, m.* from (SELECT * FROM move where room_no=#{roomNo} order by 1 desc)m)
		where rnum between #{tourstart} and #{tourend}
	</select>
	<select id="tourTotalCount" parameterType="map" resultType="_int">
 		select count(*) from tour where room_no = #{roomNo}
 	</select>
 	<select id="moveTotalCount" parameterType="map" resultType="_int">
 		select count(*) from move where room_no = #{roomNo}
 	</select>
 	<select id="selectOneMemberName" parameterType="_int" resultType="string">
 		select
 			member_name as memberName
 		from member where member_no = #{memberNo}
 	</select>
 	<update id="updateTourStatus" parameterType="map">
 		update tour set tour_status = #{tourStatus}
 		where tour_no= #{tourNo}
 	</update>
 	<!-- 입주번호 -->
 	<select id="selectGetMove" resultType="_int">
 		select 
   			max(move_no) 
   		from move
 	</select>
 	<select id="totalMoveInCount" parameterType="_int" resultType="_int">
		select count(*) from move where member_no=#{memberNo}
	</select>
	<select id="selectMoveInList" parameterType="map" resultType="move">
		select 
		    rownum as rnum, 
		    g.* 
		from
		    (select 
		        m.move_no as moveNo,
		        h.house_title as houseTitle,
		        m.member_no as memberNo,
		        m.room_no as roomNo,
		        m.move_start as moveStart,
		        m.move_end as moveEnd,
		        r.room_title as roomTitle,
		        r.house_no as houseNo,
		        p.pay_price as payPrice,
		        p.pay_date as payDate
		    from move m
		        join room r on m.room_no = r.room_no
		        join house h on r.house_no=h.house_no
		        join pay p on m.move_no = p.pay_goods
		    where m.member_no=#{memberNo} and p.pay_category=2
		    order by 2 desc)g
		where rownum between #{start} and #{end}
	</select>
</mapper>
